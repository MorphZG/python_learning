'''
Password Generator
https://www.practicepython.org/exercise/2014/05/28/16-password-generator.html


Exercise 16 (and Solution)
Write a password generator in Python. Be creative with how you generate
passwords - strong passwords have a mix of lowercase letters, uppercase
letters, numbers, and symbols. The passwords should be random, generating a
new password every time the user asks for a new password. Include your
run-time code in a main method.

Extra:

    Ask the user how strong they want their password to be.
    For weak passwords, pick a word or two from a list.

random module:
https://docs.python.org/3.3/library/random.html

string module:
https://docs.python.org/3.3/library/string.html


To get random string of character i will play with numbers first.
Random integers generated by random module, selected one by one
with for loop, converted to one of ASCII characters
and appended or concatenated to the rest of the string.

chr(integer) maps the integer to a character,
assuming it lies within the ASCII limits.
We can use this mapping to scale any integer to the ASCII
character level, using chr(x), where x is generated randomly.

If we use full ASCII table we could get some weird characters:
    ðÒØ<?b¹É~ìï¬ÿîØ
To use only english alphabets we should use their ASCII values.
If you google for ASCII table you will see that common
characters we have on our keyboards are beween 32 and 126
numbers are between 48 and 58
uppercase letters are between 65 and 65 + 26
lowercase letters are between 96 and 96 + 26

Before every hard project start with list of steps:
https://geekflare.com/password-generator-python-code/

Steps:

    - Store all the characters as a list. We can use the string module of
      Python or manualy type all of them.
    - Ask the user to enter the length of the password.
    - Shuffle the characters using the random.shuffle() method.
    - Initialize an empty list to store the password.
    - Write a loop that iterates length times:
        -Pick a random character from all the characters using the
         random.choice method.
        -Append the random character to the password.
    - Shuffle the resultant password list to make it more random.
    - Convert the password list to string using the join method.
    - Print the password.

Follow the above steps and try to write code. Don’t worry, even if you are
not able to write the code. Check out the code below.
'''


import random
import string


# building a list of letters, digits and symbols
# string module have also string.printable with to much whitespace
weak_string = string.ascii_letters
medium_string = string.ascii_letters + string.digits
strong_string = string.ascii_letters + string.digits + string.punctuation

weak_password = [x for x in weak_string]
medium_password = [x for x in medium_string]
strong_password = [x for x in strong_string]

# shuffle list values to make them 'random'
random.shuffle(weak_password)
random.shuffle(medium_password)
random.shuffle(strong_password)

print('''
    Be wise and and help me build a perfect password for you.
    Weak passwords have only letters, both upper and lowercase.
    Medium passwords have added numberd.
    Strong passwords have random symbols in the mix.\n''')

print('How strong should be your password?')
strenght_choice = input('weak, medium, strong? ')

print('Choose the lenght of password')
password_lenght = int(input('(enter number of characters)\n>> '))

# initialize the empty list to store single characters
password = []

# loop through shuffled list of characters and append to
# empty list until we hit the user lenght
for i in range(1, password_lenght+1):
    if strenght_choice == 'weak':
        random_character = random.choice(weak_password)
        password.append(random_character)
    elif strenght_choice == 'medium':
        random_character = random.choice(medium_password)
        password.append(random_character)
    elif strenght_choice == 'strong':
        random_character = random.choice(strong_password)
        password.append(random_character)

# we have generated the password but shuffle again
random.shuffle(password)
string = ''.join(password)

print(string)


# Generate Random Strings in Python using the string module
# https://www.askpython.com/python/examples/generate-random-strings-in-python

#modules: random, string
#tags: shuffle(), choice(), ascii, password generator